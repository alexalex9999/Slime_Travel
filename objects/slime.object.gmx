<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>slime_idle_front</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite_index = slime_idle_front 
image_speed = 1/2
instance_create(x, y, smooth_scrolling);
global.done_moving = false;
sliding = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(sprite_index = slime_jump_left){
    if(position_meeting(x-96, y, pillar)){
        sprite_index = slime_bounce_left;
        sound_play(bonk_snd)
    }
}
if(sprite_index = slime_jump_right){
    if(position_meeting(x+96, y, pillar)){
        sprite_index = slime_bounce_right;
        sound_play(bonk_snd)
    }
}
if(sprite_index = slime_jump_up){
    if(position_meeting(x, y-96, pillar)){
        sprite_index = slime_bounce_up;
        sound_play(bonk_snd)
    }
}
if(sprite_index = slime_jump_down){
    if(position_meeting(x, y+96, pillar)){
        sprite_index = slime_idle_front;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    if(sprite_index == slime_bounce_left &amp;&amp; !position_meeting(x-96, y, pillar)){
        audio_pause_sound(bonk_snd)
        sprite_index = slime_jump_left
    }
    if(sprite_index == slime_bounce_right &amp;&amp; !position_meeting(x+96, y, pillar)){
        audio_pause_sound(bonk_snd)
        sprite_index = slime_jump_right
    }
    if(sprite_index == slime_bounce_up &amp;&amp; !position_meeting(x, y-96, pillar)){
        audio_pause_sound(bonk_snd)
        sprite_index = slime_jump_up
    }
    if(sprite_index == slime_idle_front &amp;&amp; !position_meeting(x, y+96, pillar)){
        sprite_index = slime_jump_down
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -y;
if(!instance_place(x,y,ice_floor)&amp;&amp;sliding){
    sliding = false;
    if(sprite_index == slime_iceslide_left)
        sprite_index = slime_idle_left;
    if(sprite_index == slime_iceslide_right)
        sprite_index = slime_idle_right;
    if(sprite_index == slime_iceslide_up)
        sprite_index = slime_idle_back;
    if(sprite_index == slime_iceslide_down)
        sprite_index = slime_idle_front;
}
//normal jump
if(sprite_index == slime_jump_right &amp;&amp; image_index == 6){
    sprite_index = slime_idle_right
    mask_index = -1;
    x+=96
    smooth_scrolling.x = x;
    smooth_scrolling.y = y;
    image_speed = 1/3
    audio_play_sound(slime_land_snd, 1, false)
    global.done_moving = true;
}
if(sprite_index == slime_jump_left &amp;&amp; image_index == 6){
    sprite_index = slime_idle_left
    mask_index = -1;
    x-=96
    smooth_scrolling.x = x;
    smooth_scrolling.y = y;
    image_speed = 1/3
    audio_play_sound(slime_land_snd, 1, false)
    global.done_moving = true;
}
if(sprite_index == slime_jump_up &amp;&amp; image_index == 6){
    sprite_index = slime_idle_back
    mask_index = -1;
    y-=96
    smooth_scrolling.x = x;
    smooth_scrolling.y = y;
    image_speed = 1/3
    audio_play_sound(slime_land_snd, 1, false)
    global.done_moving = true;
}
if(sprite_index == slime_jump_down &amp;&amp; image_index == 6){
    sprite_index = slime_idle_front
    mask_index = -1;
    y+=96
    smooth_scrolling.x = x;
    smooth_scrolling.y = y;
    image_speed = 1/3
    audio_play_sound(slime_land_snd, 1, false)
    global.done_moving = true;
}
//ice jump
if(sprite_index == slime_ice_right &amp;&amp; image_index == 4){
    sprite_index = slime_iceslide_right;
    mask_index = -1;
    x+=96
    smooth_scrolling.x = x;
    smooth_scrolling.y = y;
    image_speed = 1/3
    audio_play_sound(slime_land_snd, 1, false)
    sliding=true;
}
if(sprite_index == slime_ice_left &amp;&amp; image_index == 4){
    sprite_index = slime_iceslide_left;
    mask_index = -1;
    x-=96
    smooth_scrolling.x = x;
    smooth_scrolling.y = y;
    image_speed = 1/3
    audio_play_sound(slime_land_snd, 1, false)
    sliding=true;
}
if(sprite_index == slime_ice_up &amp;&amp; image_index == 4){
    sprite_index = slime_iceslide_up;
    mask_index = -1;
    y-=96
    smooth_scrolling.x = x;
    smooth_scrolling.y = y;
    image_speed = 1/3
    audio_play_sound(slime_land_snd, 1, false)
    sliding=true;
}
if(sprite_index == slime_ice_down &amp;&amp; image_index == 4){
    sprite_index = slime_iceslide_down;
    mask_index = -1;
    y+=96
    smooth_scrolling.x = x;
    smooth_scrolling.y = y;
    image_speed = 1/3
    audio_play_sound(slime_land_snd, 1, false)
    sliding=true;
}

//jump into pit
if(sprite_index == slime_into_pit_right &amp;&amp; image_index == 5){
    sprite_index = slime_idle_pit_right
    mask_index = -1;
    x+=96
    smooth_scrolling.x = x;
    smooth_scrolling.y = y;
    image_speed = 1/3
    audio_play_sound(slime_land_snd, 1, false)
}
if(sprite_index == slime_into_pit_left &amp;&amp; image_index == 5){
    sprite_index = slime_idle_pit_left
    mask_index = -1;
    x-=96
    smooth_scrolling.x = x;
    smooth_scrolling.y = y;
    image_speed = 1/3
    audio_play_sound(slime_land_snd, 1, false)
}
if(sprite_index == slime_into_pit_up &amp;&amp; image_index == 5){
    sprite_index = slime_idle_pit_back
    mask_index = -1;
    y-=96
    smooth_scrolling.x = x;
    smooth_scrolling.y = y;
    image_speed = 1/3
    audio_play_sound(slime_land_snd, 1, false)
}
if(sprite_index == slime_into_pit_down &amp;&amp; image_index == 5){
    sprite_index = slime_idle_pit_front
    mask_index = -1;
    y+=96
    smooth_scrolling.x = x;
    smooth_scrolling.y = y;
    image_speed = 1/3
    audio_play_sound(slime_land_snd, 1, false)
}

//bounce
if(sprite_index == slime_bounce_right &amp;&amp; image_index == 5){
    sprite_index = slime_idle_right
    mask_index = -1;
    image_speed = 1/3
    audio_play_sound(slime_land_snd, 1, false)
    global.done_moving = true;
}
if(sprite_index == slime_bounce_left &amp;&amp; image_index == 5){
    sprite_index = slime_idle_left
    mask_index = -1;
    image_speed = 1/3
    audio_play_sound(slime_land_snd, 1, false)
    global.done_moving = true;
}
if(sprite_index == slime_bounce_up &amp;&amp; image_index == 5){
    sprite_index = slime_idle_back
    mask_index = -1;
    image_speed = 1/3
    audio_play_sound(slime_land_snd, 1, false)
    global.done_moving = true;
}

//box bounce
if(sprite_index == slime_box_right &amp;&amp; image_index == 9){
    sprite_index = slime_idle_right
    mask_index = -1;
    image_speed = 1/3
    (instance_position(x+96, y, pushable_box)).sprite_index = box;
    audio_play_sound(slime_land_snd, 1, false)
    global.done_moving = true;
}
if(sprite_index == slime_box_left &amp;&amp; image_index == 9){
    sprite_index = slime_idle_left
    mask_index = -1;
    image_speed = 1/3
    (instance_position(x-96, y, pushable_box)).sprite_index = box;
    audio_play_sound(slime_land_snd, 1, false)
    global.done_moving = true;
}
if(sprite_index == slime_box_up &amp;&amp; image_index == 6){
    sprite_index = slime_idle_back
    mask_index = -1;
    image_speed = 1/3
    (instance_position(x, y-96, pushable_box)).sprite_index = box;
    audio_play_sound(slime_land_snd, 1, false)
    global.done_moving = true;
}


//if(sprite_index == slime_bounce_down &amp;&amp; image_index == 5){
//    sprite_index = slime_idle_front
//    image_speed = 1/3
//}
//pushing box
if(sprite_index == slime_push_left &amp;&amp; image_index == 6){
    var boxid = (instance_position(x-96, y, pushable_box));
    x-=96
    smooth_scrolling.x = x;
    smooth_scrolling.y = y;
    boxid.sprite_index = box
    boxid.x=x-96;
    sprite_index = slime_idle_left
    mask_index = -1;
    image_speed = 1/3
    audio_play_sound(slime_land_snd, 1, false)
    global.done_moving = true;
    if(instance_place(x,y,ice_floor)){
        sliding=true;
    }
}
if(sprite_index == slime_push_right &amp;&amp; image_index == 6){
    var boxid = (instance_position(x+96, y, pushable_box));
    x+=96
    smooth_scrolling.x = x;
    smooth_scrolling.y = y;
    boxid.sprite_index = box
    boxid.x=x+96;
    sprite_index = slime_idle_right
    mask_index = -1;
    image_speed = 1/3
    audio_play_sound(slime_land_snd, 1, false)
    global.done_moving = true;
    if(instance_place(x,y,ice_floor)){
        sliding=true;
    }
}
if(sprite_index == slime_push_up &amp;&amp; image_index == 6){
    var boxid = (instance_position(x, y-96, pushable_box));
    y-=96
    smooth_scrolling.x = x;
    smooth_scrolling.y = y;
    boxid.sprite_index = box
    boxid.y=y-96;
    sprite_index = slime_idle_back
    mask_index = -1;
    image_speed = 1/3
    audio_play_sound(slime_land_snd, 1, false)
    global.done_moving = true;
    if(instance_place(x,y,ice_floor)){
        sliding=true;
    }
}
if(sprite_index == slime_push_down &amp;&amp; image_index == 6){
    var boxid = (instance_position(x, y+96, pushable_box));
    y+=96
    smooth_scrolling.x = x;
    smooth_scrolling.y = y;
    boxid.sprite_index = box
    boxid.y=y+96;
    sprite_index = slime_idle_front
    mask_index = -1;
    image_speed = 1/3
    audio_play_sound(slime_land_snd, 1, false)
    global.done_moving = true;
    if(instance_place(x,y,ice_floor)){
        sliding=true;
    }
}
//box on ice
if(sprite_index == slime_push_ice_left &amp;&amp; image_index == 5){
    var boxid = (instance_position(x-96, y, pushable_box));
    x-=96
    smooth_scrolling.x = x;
    smooth_scrolling.y = y;
    boxid.sprite_index = box
    boxid.x=x-96;
    boxid.sliding = "left";
    sprite_index = slime_idle_left
    mask_index = -1;
    image_speed = 1/3
    audio_play_sound(slime_land_snd, 1, false)
    global.done_moving = true;
    sliding = false;
}
if(sprite_index == slime_push_ice_right &amp;&amp; image_index == 5){
    var boxid = (instance_position(x+96, y, pushable_box));
    x+=96
    smooth_scrolling.x = x;
    smooth_scrolling.y = y;
    boxid.sprite_index = box
    boxid.x=x+96;
    boxid.sliding = "right";
    sprite_index = slime_idle_right
    mask_index = -1;
    image_speed = 1/3
    audio_play_sound(slime_land_snd, 1, false)
    global.done_moving = true;
    sliding = false;
}
if(sprite_index == slime_push_ice_up &amp;&amp; image_index == 5){
    var boxid = (instance_position(x, y-96, pushable_box));
    y-=96
    smooth_scrolling.x = x;
    smooth_scrolling.y = y;
    boxid.sprite_index = box
    boxid.y=y-96;
    boxid.sliding = "up";
    sprite_index = slime_idle_back
    mask_index = -1;
    image_speed = 1/3
    audio_play_sound(slime_land_snd, 1, false)
    global.done_moving = true;
    sliding = false;
}
if(sprite_index == slime_push_ice_down &amp;&amp; image_index == 5){
    var boxid = (instance_position(x, y+96, pushable_box));
    y+=96
    smooth_scrolling.x = x;
    smooth_scrolling.y = y;
    boxid.sprite_index = box
    boxid.y=y+96;
    boxid.sliding = "down";
    sprite_index = slime_idle_front
    mask_index = -1;
    image_speed = 1/3
    audio_play_sound(slime_land_snd, 1, false)
    global.done_moving = true;
    sliding = false;
}
//ice
if(sliding){
    mask_index = -1
    if(sprite_index == slime_iceslide_down){
        if(place_meeting(x,y+12,wall)||place_meeting(x,y+12,pillar)||(!place_meeting(x,y+96,ice_floor)&amp;&amp;place_meeting(x,y+96,pushable_box))){
            sliding=false;
            global.done_moving = true;
            image_speed = 1/3;
            sprite_index = slime_idle_front;
        }
        else{
            if(place_meeting(x,y+12,pushable_box)){
                (instance_place(x,y+12,pushable_box)).sliding = "down";
                sliding=false;
                global.done_moving = true;
                image_speed = 1/3;
                sprite_index = slime_idle_front;
            }
            else{
                if(place_meeting(x,y+12,pit)){
                    if((instance_place(x,y+12,pit)).pit_filled){
                        y+=12
                        smooth_scrolling.x = x;
                        smooth_scrolling.y = y;
                    }
                    else{
                        y+=12
                        smooth_scrolling.x = x;
                        smooth_scrolling.y = y;
                    }
                }
                else{
                    y+=12
                    smooth_scrolling.x = x;
                    smooth_scrolling.y = y;
                }
            }
        }
    }
    if(sprite_index == slime_iceslide_up){
        if(place_meeting(x,y-12,wall)||place_meeting(x,y-12,pillar)||(!place_meeting(x,y-96,ice_floor)&amp;&amp;place_meeting(x,y-96,pushable_box))){
            sliding=false;
            global.done_moving = true;
            image_speed = 1/3;
            sprite_index = slime_idle_back;
        }
        else{
            if(place_meeting(x,y-12,pushable_box)){
                (instance_place(x,y-12,pushable_box)).sliding = "up";
                sliding=false;
                global.done_moving = true;
                image_speed = 1/3;
                sprite_index = slime_idle_back;
            }
            else{
                if(place_meeting(x,y-12,pit)){
                    if((instance_place(x,y-12,pit)).pit_filled){
                        y-=12
                        smooth_scrolling.x = x;
                        smooth_scrolling.y = y;
                    }
                    else{
                        y-=12
                        smooth_scrolling.x = x;
                        smooth_scrolling.y = y;
                    }
                }
                else{
                    y-=12
                    smooth_scrolling.x = x;
                    smooth_scrolling.y = y;
                }
            }
        }
    }
    if(sprite_index == slime_iceslide_right){
        if(place_meeting(x+12,y,wall)||place_meeting(x+12,y,pillar)||(!place_meeting(x+96,y,ice_floor)&amp;&amp;place_meeting(x+96,y,pushable_box))){
            sliding=false;
            global.done_moving = true;
            image_speed = 1/3;
            sprite_index = slime_idle_right;
        }
        else{
            if(place_meeting(x+12,y,pushable_box)){
                (instance_place(x+12,y,pushable_box)).sliding = "right";
                sliding=false;
                global.done_moving = true;
                image_speed = 1/3;
                sprite_index = slime_idle_right;
            }
            else{
                if(place_meeting(x+12,y,pit)){
                    if((instance_place(x+12,y,pit)).pit_filled){
                        x+=12
                        smooth_scrolling.x = x;
                        smooth_scrolling.y = y;
                    }
                    else{
                        x+=12
                        smooth_scrolling.x = x;
                        smooth_scrolling.y = y;
                    }
                }
                else{
                    x+=12
                    smooth_scrolling.x = x;
                    smooth_scrolling.y = y;
                }
            }
        }
    }
    if(sprite_index == slime_iceslide_left){
        if(place_meeting(x-12,y,wall)||place_meeting(x-12,y,pillar)||(!place_meeting(x-96,y,ice_floor)&amp;&amp;place_meeting(x-96,y,pushable_box))){
            sliding=false;
            global.done_moving = true;
            image_speed = 1/3;
            sprite_index = slime_idle_left;
        }
        else{
            if(place_meeting(x-12,y,pushable_box)){
                (instance_place(x-12,y,pushable_box)).sliding = "left";
                sliding=false;
                global.done_moving = true;
                image_speed = 1/3;
                sprite_index = slime_idle_left;
            }else{
                if(place_meeting(x-12,y,pit)){
                    if((instance_place(x-12,y,pit)).pit_filled){
                        x-=12
                        smooth_scrolling.x = x;
                        smooth_scrolling.y = y;
                    }
                    else{
                        x-=12
                        smooth_scrolling.x = x;
                        smooth_scrolling.y = y;
                    }
                }
                else{
                    x-=12
                    smooth_scrolling.x = x;
                    smooth_scrolling.y = y;
                }
            }
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="door_nextroom">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!audio_is_playing(level_change_snd)){
    audio_play_sound(level_change_snd, 1, false)
}
global.reset_times = 0;
global.help_needed = false;
global.cheater = false;
Reset_Button.reseting = true;
Reset_Button.nextroom = true;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(instance_exists(text_box) || global.cheater || keyboard_check(vk_shift)||global.transition){

}else{

if(sprite_index == slime_idle_pit_front || sprite_index == slime_idle_pit_back || 
sprite_index == slime_idle_pit_left || sprite_index == slime_idle_pit_right){
    sprite_index = slime_idle_pit_front;
}
if(sprite_index == slime_idle_front || sprite_index == slime_idle_back || 
sprite_index == slime_idle_left || sprite_index == slime_idle_right){
    if(position_meeting(x, y+96, NPC_Interact)){
        sprite_index = slime_idle_front;
    }
    else{
    image_index = 0
    image_speed = 1/2
    //if(!position_meeting(x, y+96, all) || position_meeting(x, y+96, ice_floor) || position_meeting(x, y+96, door_nextroom) || position_meeting(x, y+96, invisible_button) || position_meeting(x, y+96, switch_button)){
        sprite_index = slime_jump_down
        if(position_meeting(x, y, switch_button)){
            alarm[1] = 1;
        }
    //}
    if(position_meeting(x, y+96, ice_floor)){
        sprite_index = slime_ice_down;
    }
    if(position_meeting(x, y+96, wall)){
        sprite_index = slime_idle_front
        //sprite_index = slime_bounce_down
    }
    if(position_meeting(x, y+96, pillar)){
        sprite_index = slime_idle_front
        alarm[0] = 1;
    }
    if(position_meeting(x, y+96, pit)){
        sprite_index = slime_into_pit_down;
    }
    if(position_meeting(x, y+96, pushable_box)){
        if(position_meeting(x, y+192, wall) || position_meeting(x, y+192, pushable_box) || position_meeting(x, y+192, pillar) || position_meeting(x, y+192, ice_floor)){
            if(position_meeting(x, y+192, ice_floor)&amp;&amp;!position_meeting(x, y+192, pushable_box)){
                sprite_index = slime_push_ice_down;
                audio_play_sound(move_box_snd, 1, false);
                (instance_position(x, y+96, pushable_box)).sprite_index = empty_sprite;
            }
            else{
                sprite_index = slime_idle_front;
                //sprite_index=slime_bounce_down
                //(instance_position(x, y+96, pushable_box)).sprite_index = box_ice_down;
            }
        }
        else{
        sprite_index = slime_push_down;
        (instance_position(x, y+96, pushable_box)).sprite_index = empty_sprite
        audio_play_sound(move_box_snd, 1, false);
        }
    }
    }
    mask_index = no_mask;
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(instance_exists(text_box) || global.cheater || keyboard_check(vk_shift)||global.transition){

}else{
if(sprite_index == slime_idle_pit_front || sprite_index == slime_idle_pit_back || 
sprite_index == slime_idle_pit_left || sprite_index == slime_idle_pit_right){
    sprite_index = slime_idle_pit_right;
}
if((sprite_index == slime_idle_front || sprite_index == slime_idle_back || 
sprite_index == slime_idle_left || sprite_index == slime_idle_right)){
    if(position_meeting(x+96, y, NPC_Interact)){
        sprite_index = slime_idle_right;
    }
    else{
    image_index = 0
    image_speed = 1/2
    //if(!position_meeting(x+96, y, all) || position_meeting(x+96, y, ice_floor) || instance_position(x+96, y, door_nextroom) || (instance_position(x+96, y, invisible_button)!=noone) || (instance_position(x+96, y, switch_button)!=noone)){
        sprite_index = slime_jump_right
        if(position_meeting(x, y, switch_button)){
            alarm[1] = 1;
        }
    //}
    if(position_meeting(x+96, y, ice_floor)){
        sprite_index = slime_ice_right;
    }
    if(position_meeting(x+96, y, wall)){
        sprite_index = slime_bounce_right
        audio_play_sound(bonk_snd, 1, false)
    }
    if(position_meeting(x+96, y, pillar)){
        sprite_index = slime_bounce_right
        audio_play_sound(bonk_snd, 1, false)
        alarm[0] = 1;
    }
    if(position_meeting(x+96, y, pit)){
        sprite_index = slime_into_pit_right;
    }
    if(position_meeting(x+96, y, pushable_box)){
        if(position_meeting(x+192, y, wall) || position_meeting(x+192, y, pushable_box) || position_meeting(x+192, y, pillar) || position_meeting(x+192, y, ice_floor)){
            if(position_meeting(x+192, y, ice_floor)&amp;&amp;!position_meeting(x+192, y, pushable_box)){
                sprite_index = slime_push_ice_right;
                audio_play_sound(move_box_snd, 1, false);
                (instance_position(x+96, y, pushable_box)).sprite_index = empty_sprite;
            }
            else{
                sprite_index=slime_box_right
                audio_play_sound(bonk_snd, 1, false)
                (instance_position(x+96, y, pushable_box)).sprite_index = empty_sprite;
            }
        }
        else{
        sprite_index = slime_push_right;
        (instance_position(x+96, y, pushable_box)).sprite_index = empty_sprite
        audio_play_sound(move_box_snd, 1, false);
        }
    }
    }
    mask_index = no_mask;
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(instance_exists(text_box) || global.cheater || keyboard_check(vk_shift)||global.transition){

}else{
if(sprite_index == slime_idle_pit_front || sprite_index == slime_idle_pit_back || 
sprite_index == slime_idle_pit_left || sprite_index == slime_idle_pit_right){
    sprite_index = slime_idle_pit_back;
}
if((sprite_index == slime_idle_front || sprite_index == slime_idle_back || 
sprite_index == slime_idle_left || sprite_index == slime_idle_right)){
    if(position_meeting(x, y-96, NPC_Interact)){
        sprite_index = slime_idle_back;
    }
    else{
    image_index = 0
    image_speed = 1/2
    //if(!position_meeting(x, y-96, all) || position_meeting(x, y-96, ice_floor) || position_meeting(x, y-96, invisible_button) || position_meeting(x, y-96, switch_button) || position_meeting(x, y-96, door_nextroom)){
        sprite_index = slime_jump_up
        if(position_meeting(x, y, switch_button)){
            alarm[1] = 1;
        }
    //}
    if(position_meeting(x, y-96, ice_floor)){
        sprite_index = slime_ice_up;
    }
    if(position_meeting(x, y-96, wall)){
        sprite_index = slime_bounce_up
        audio_play_sound(bonk_snd, 1, false)
    }
    if(position_meeting(x, y-96, pillar)){
        sprite_index = slime_bounce_up
        audio_play_sound(bonk_snd, 1, false)
        alarm[0] = 1;
    }
    if(position_meeting(x, y-96, pit)){
        sprite_index = slime_into_pit_up;
    }
    if(position_meeting(x, y-96, pushable_box)){
        if(position_meeting(x, y-192, wall) || position_meeting(x, y-192, pushable_box) || position_meeting(x, y-192, pillar) || position_meeting(x, y-192, ice_floor)){
            if(position_meeting(x, y-192, ice_floor)&amp;&amp;!position_meeting(x, y-192, pushable_box)){
                sprite_index = slime_push_ice_up;
                audio_play_sound(move_box_snd, 1, false);
                (instance_position(x, y-96, pushable_box)).sprite_index = empty_sprite;
            }
            else{
                sprite_index=slime_box_up
                audio_play_sound(bonk_snd, 1, false)
                (instance_position(x, y-96, pushable_box)).sprite_index = empty_sprite;
            }
        }
        else{
        sprite_index = slime_push_up;
        (instance_position(x, y-96, pushable_box)).sprite_index = empty_sprite
        audio_play_sound(move_box_snd, 1, false);
        }
    }
    }
    mask_index = no_mask;
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(instance_exists(text_box)|| global.cheater || keyboard_check(vk_shift)||global.transition){

}else{
if(sprite_index == slime_idle_pit_front || sprite_index == slime_idle_pit_back || 
sprite_index == slime_idle_pit_left || sprite_index == slime_idle_pit_right){
    sprite_index = slime_idle_pit_left;
}
if((sprite_index == slime_idle_front || sprite_index == slime_idle_back || 
sprite_index == slime_idle_left || sprite_index == slime_idle_right)){
    if(position_meeting(x-96, y, NPC_Interact)){
        sprite_index = slime_idle_left;
    }
    else{
    image_index = 0
    image_speed = 1/2
    //if(!position_meeting(x-96, y, all) || position_meeting(x-96, y, ice_floor) || position_meeting(x-96, y, invisible_button) || position_meeting(x-96, y, switch_button) || position_meeting(x-96, y, door_nextroom)){
        sprite_index = slime_jump_left
        if(position_meeting(x, y, switch_button)){
            alarm[1] = 1;
        } 
    //}
    if(position_meeting(x-96, y, ice_floor)){
        sprite_index = slime_ice_left;
    }
    if(position_meeting(x-96, y, wall)){
        sprite_index = slime_bounce_left
        audio_play_sound(bonk_snd, 1, false)
    }
    if(position_meeting(x-96, y, pillar)){
        sprite_index = slime_bounce_left
        audio_play_sound(bonk_snd, 1, false)
        alarm[0] = 1;
    }
    if(position_meeting(x-96, y, pit)){
        sprite_index = slime_into_pit_left;
    }
    if(position_meeting(x-96, y, pushable_box)){
        if(position_meeting(x-192, y, wall) || position_meeting(x-192, y, pushable_box) || position_meeting(x-192, y, pillar) || position_meeting(x-192, y, ice_floor)){
            if(position_meeting(x-192, y, ice_floor)&amp;&amp;!position_meeting(x-192, y, pushable_box)){
                sprite_index = slime_push_ice_left;
                audio_play_sound(move_box_snd, 1, false);
                (instance_position(x-96, y, pushable_box)).sprite_index = empty_sprite;
            }
            else{
                sprite_index=slime_box_left
                audio_play_sound(bonk_snd, 1, false)
                (instance_position(x-96, y, pushable_box)).sprite_index = empty_sprite;
            }
        }
        else{
            sprite_index = slime_push_left;
            (instance_position(x-96, y, pushable_box)).sprite_index = empty_sprite;
            audio_play_sound(move_box_snd, 1, false);
        }
    }
    }
    mask_index = no_mask;
}

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>2</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
