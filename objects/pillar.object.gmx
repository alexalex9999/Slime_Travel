<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>pillar_unlocked</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 1/2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>id.depth = -y;
if(global.level_type == "ice"){
    if(!place_meeting(x,y,pushable_box)){
    if(global.pillar_down[pillar_num] &amp;&amp; (sprite_index == ice_pillar_locked || sprite_index == ice_pillar_locking)){
        mask_index = no_mask;
        if(sprite_index == ice_pillar_locking){
        switch(image_index){
        case 0: image_index = 6;
        break;
        case 1: image_index = 2;
        break;
        case 2: 
        case 3: 
        case 4: image_index = 1;
        break;
        case 5: 
        case 6: image_index = 0;
        break;
        }
        }
        sprite_index = ice_pillar_unlocking;
        if(!audio_is_playing(pillar_snd))
        audio_play_sound(pillar_snd, 1, false);
    }
    if(sprite_index == ice_pillar_unlocking &amp;&amp; image_index == 6){
        sprite_index = ice_pillar_unlocked
        id.depth = 100;
    }
    if(!global.pillar_down[pillar_num] &amp;&amp; (sprite_index == ice_pillar_unlocked || sprite_index == ice_pillar_unlocking)){
        mask_index = -1;
        if(sprite_index = ice_pillar_unlocking){
        switch(image_index){
        case 0: image_index = 6;
        break;
        case 1: image_index = 3;
        break;
        case 2: image_index = 1;
        break;
        case 3: 
        case 4: 
        case 5: 
        case 6: image_index = 0;
        break;
        }
        }
        sprite_index = ice_pillar_locking
        if(!audio_is_playing(pillar_snd))
        audio_play_sound(pillar_snd, 1, false);
    }
    if(sprite_index == ice_pillar_locking &amp;&amp; image_index == 6){
        sprite_index = ice_pillar_locked
        mask_index = -1;
    }
    }
    if(sprite_index == ice_pillar_unlocked){
        depth = 10000
        mask_index = no_mask;
    }
    else{
    }
}

if(global.level_type == "normal"){
    if(!place_meeting(x,y,pushable_box)){
    if(global.pillar_down[pillar_num] &amp;&amp; (sprite_index == pillar_locked || sprite_index == pillar_locking)){
        mask_index = no_mask;
        if(sprite_index == pillar_locking){
        switch(image_index){
        case 0: image_index = 6;
        break;
        case 1: image_index = 2;
        break;
        case 2: 
        case 3: 
        case 4: image_index = 1;
        break;
        case 5: 
        case 6: image_index = 0;
        break;
        }
        }
        sprite_index = pillar_unlocking;
        if(!audio_is_playing(pillar_snd))
        audio_play_sound(pillar_snd, 1, false);
    }
    if(sprite_index == pillar_unlocking &amp;&amp; image_index == 6){
        sprite_index = pillar_unlocked
        id.depth = 100;
    }
    if(!global.pillar_down[pillar_num] &amp;&amp; (sprite_index == pillar_unlocked || sprite_index == pillar_unlocking)){
        mask_index = -1;
        if(sprite_index = pillar_unlocking){
        switch(image_index){
        case 0: image_index = 6;
        break;
        case 1: image_index = 3;
        break;
        case 2: image_index = 1;
        break;
        case 3: 
        case 4: 
        case 5: 
        case 6: image_index = 0;
        break;
        }
        }
        sprite_index = pillar_locking
        if(!audio_is_playing(pillar_snd))
        audio_play_sound(pillar_snd, 1, false);
    }
    if(sprite_index == pillar_locking &amp;&amp; image_index == 6){
        sprite_index = pillar_locked
        mask_index = -1;
    }
    }
    if(sprite_index == pillar_unlocked){
        depth = 10000
        mask_index = no_mask;
    }
    else{
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.level_type == "ice")
sprite_index = ice_pillar_unlocked
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
